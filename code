
from random import uniform, seed
import math

seed(49)
#______________________define objective function________________________
def func(x, x1):
    ## Ackley function
    #return -20*math.exp(-0.2*math.sqrt(0.5*(x**2+x1**2))) - math.exp(0.5*(math.cos(2*math.pi*x)+math.cos(2*math.pi*x1))) + math.exp(1)+20
    
## Beale function
    #return (1.5 -x + x*x1 )**2 +(2.25-x + x*(x1**2))**2 +(2.625-x+ x*(x1**3))**2
    
    ## Goldstein–Price function
    #return (1+((x+x1+1)**2)*(19-14*x+3*x**2 +14*x1+ 6*x1*x +3*x1**2) )*(30+((2*x-3*x1)**2)*(18-32*x+12*x**2 +48*x1 -36*x*x1 +27*x1**2))
    
    ## Lévi function N.13
    return (math.sin(3*math.pi*x))**2 + ((x-1)**2)*(1+(math.sin(3*math.pi*x1))**2)+((x1-1)**2)*(1+(math.sin(2*math.pi*x1))**2)
    
iterations = 20

ns = 15 #scout arıları sayısı
nb = 10 #best sites sayısı
ne = 2  #elite sites sayısı
nre = 5 # elite sites için alınan arı sayısı
nrb = 4  #best sites için alınan arı sayısı 
r = 1




bees = {}
for i in range(ns):
    x = uniform(-5, 5)
    x1 = uniform(-5, 5)
    f = func(x, x1)
    bees[f] = {'x':x, 'x1':x1}
    
elits = {}
bests = {}

for i in range(nb):
    if i < ne:
        elits[min(bees)] = bees[min(bees)]
    else:
        bests[min(bees)] = bees[min(bees)]
    del bees[min(bees)]

for iter in range(iterations):
    bees = {}

    for i in range(ns-nb):
        x = uniform(-5, 5)
        x1 = uniform(-5, 5)
        f = func(x, x1)
        bees[f] = {'x':x, 'x1':x1}

    for bee in elits:
        forag = {'bee':bee, 'x':elits[bee]['x'], 'x1':elits[bee]['x1']}
        for i in range(nre):
            x = uniform(elits[bee]['x']-r, elits[bee]['x']+r)
            x1 = uniform(elits[bee]['x1']-r, elits[bee]['x1']+r)
            f = func(x, x1)
            if f < forag['bee']: forag = {'bee':f, 'x':x, 'x1':x1}
        bees[forag['bee']] = {'x':forag['x'], 'x1':forag['x1']}
        
    for bee in bests:
        forag = {'bee':bee, 'x':bests[bee]['x'], 'x1':bests[bee]['x1']}
        for i in range(nrb):
            x = uniform(bests[bee]['x']-r, bests[bee]['x']+r)
            x1 = uniform(bests[bee]['x1']-r, bests[bee]['x1']+r)
            f = func(x, x1)
            if f < forag['bee']: forag = {'bee':f, 'x':x, 'x1':x1}
        bees[forag['bee']] = {'x':forag['x'], 'x1':forag['x1']}

    elits = {}
    bests = {}
  
    for i in range(nb):
        if i < ne:
            elits[min(bees)] = bees[min(bees)]
        else:
            bests[min(bees)] = bees[min(bees)]
        del bees[min(bees)]

#printing solitions    
print(min(elits))
print(elits[min(elits)]['x'])
print(elits[min(elits)]['x1'])

